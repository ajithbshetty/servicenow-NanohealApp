<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($http, $scope, $sce) {
    /* widget controller */
    var c = this;
    $scope.isServiceTagAvailable = false;
    $scope.interactiveTab = false;
    $scope.authorization = "";
    $scope.authToken = "";
    $scope.liList = [];
    $scope.subLiList = [];
    $scope.actionHistory = [];
    $scope.serviceTag = "";
    var currentRunning = "";
    var currentIndex = "";
    var ws = '';
    var wsurl = 'mspnode.nanoheal.com/hfnws'; 
    var reportingurl = 'mspevent.nanoheal.com';
    var baseUrl = "https://msp.nanoheal.com/Dashboard";
    var jwtToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluQG5hbm9oZWFsLmNvbSIsInBhc3N3b3JkIjoibmFub2hlYWxAMTIzIn0.d4A2iq9VgYqgJmeLNUENBLYeQ177DnNwwaG5ef5xKrM";

    $scope.createNewSession = function () {
        var validateUseroptions = {
            method: 'POST',
            url: baseUrl + "/api/validateuser",
            headers: {
                "Content-Type": "application/json;charset=UTF-8",
                "Authorization": "Bearer " + jwtToken
            }
        };
        $http(validateUseroptions).then(function (response) {
            var res = response.data;
            $scope.authorization = res.Authorization;
            $scope.authToken = res.AuthToken;
            $scope.getMainList();
            return true;
        });
    }

    var res = $scope.createNewSession();
    var profileDataoptions = {
        method: 'POST',
        url: baseUrl + "/api/profile/getProfileData",
        data: { "os": "Windows", "pageId": "1", "ossub": "NA" },
        headers: {
            "Content-Type": "application/json;charset=UTF-8",
            "Authorization": "Bearer " + $scope.authorization,
            "X-API-KEY": $scope.authToken
        }
    };

    //This will Request Main List 
    $scope.getMainList = function () {
        $http(profileDataoptions).then(function (response) {
            console.log("datatatatatatata");
            console.log(response.data);
            $scope.liList = response.data.data;
        });
    }

    // This will request Machine Action History
    $scope.getMachineActionHistoryy = function () {
        if ($scope.serviceTag == "") {
            var ele = angular.element('#servicetagBox');
            ele.focus()
            ele.css('border-color', 'red');
            return;
        }
        else {
            var ele = angular.element('#servicetagBox');
            ele.blur();
            ele.css('border-color', '');
        }
        console.log("Authorization is ");
        console.log($scope.authorization);
        console.log("Auth token is ");
        console.log($scope.authToken);
        var machineHistoryoptions = {
            method: 'POST',
            url: baseUrl + "/api/profile/machineHistory",
            data: { "machine": $scope.serviceTag },
            headers: {
                "Content-Type": "application/json;charset=UTF-8",
                "Authorization": "Bearer " + $scope.authorization,
                "X-API-KEY": $scope.authToken
            }
        };
        $http(machineHistoryoptions).then(function (response) {
            $scope.actionHistory = response.data;
        });
    }

    // This will get L1 or L2 Item list based on type
    $scope.getFixes = function (indx, type) {
        var data = [{}];
        if (type == 'l1') {
            data = $scope.liList[indx]
        }
        else {
            data = $scope.subLiList[indx]
        }
        profileDataoptions.data = { "os": "Windows", "pageId": data['parentId'], "backId": data['page'], "menuitem": data['profile'], "ossub": "NA" };
        $http(profileDataoptions).then(function (response) {
            $scope.subLiList = response.data.data;
        });
    }

    $scope.trimData = function (str) {
        return decodeURIComponent((str + '').replace(/\+/g, '%20'))
    }

    // This will trigger Fix 
    $scope.triggerFix = function (event, indx, type) {
        if ($scope.serviceTag == "") {
            var ele = angular.element('#servicetagBox');
            ele.focus()
            ele.css('border-color', 'red');
            return;
        }
        else {
            var ele = angular.element('#servicetagBox');
            ele.blur();
            ele.css('border-color', '');
        }
        var data = [{}];
        if (type == 'l1') {
            data = $scope.liList[indx]
        }
        else {
            data = $scope.subLiList[indx];
        }
        currentRunning = type;
        currentIndex = indx;
        var triggerFixoptions = {
            method: 'POST',
            url: baseUrl + "/api/profile/actionInteractive",
            data: { "machine": $scope.serviceTag, "shortDesc": data['shortDesc'], "profileName": data['profile'], "dartNumber": data['dart'], "variable": data['variable'], "snusername": 'admin' },
            headers: {
                "Content-Type": "application/json;charset=UTF-8",
                "Authorization": "Bearer " + $scope.authorization,
                "X-API-KEY": $scope.authToken
            }
        };
        $http(triggerFixoptions).then(function (response) {
            var JobData = {};
            JobData['Type'] = 'ExecuteJob';
            JobData['ServiceTag'] = $scope.serviceTag;
            ws.send(JSON.stringify(JobData));
            angular.element(event.currentTarget).css('background', 'green');
            angular.element(event.currentTarget).css('color', '#ffff');
            angular.element(event.currentTarget).html("Solution Pushed");
        });
    }

    if (ws === '') {
        if (window.location.protocol !== "https:") {
            wsconnect('ws://' + wsurl, reportingurl);
            console.log('Connecting to Communication Server : ' + 'http://' + wsurl);
        } else {
            wsconnect('wss://' + wsurl, reportingurl);
            console.log('Connecting to Communication Server : ' + 'https://' + wsurl);
        }
    } else {
        LogToConsole('Already Connected to Node');
    }

    // This will connect to web socket
    function wsconnect(wsurl, reportingurl) {
        ws = new WebSocket(wsurl);
        ws.onopen = function () {
            console.log('Connecting to Communication Server Success');
            var ConnectData = {};
            ConnectData['Type'] = 'Dashboard';
            ConnectData['AgentId'] = 'admin@nanoheal.com';
            ConnectData['AgentName'] = window.NOW.user_name;
            ConnectData['ReportingURL'] = reportingurl;
            ws.send(JSON.stringify(ConnectData));
        };
        ws.onmessage = function (msg) {
            ShowInteractiveJobProgress(msg);
        };
        ws.onclose = function () {
            setTimeout(function () {
                wsconnect(wsurl);
            }, 2000);
        };
    }

    // This piece of code will show progress on triggering any action
    function ShowInteractiveJobProgress(JobStatus) {
        var JsonMsg = JSON.parse(JobStatus.data);
        console.log(JsonMsg);
        var Status = JsonMsg.Status;
        var ServiceTag = JsonMsg.ServiceTag;
        var mes = "";
        if (typeof ServiceTag !== "undefined") {
            if (ServiceTag.length > 0) {
                ServiceTag = ServiceTag.replace(/^\s+|\s+$/g, '');
            }
        }
        $scope.serviceTag = $scope.serviceTag.replace(/^\s+|\s+$/g, '');
        if ($scope.serviceTag !== ServiceTag) {
            console.log("Other Pc");
            return;
        }

        if (Status === 'System Online' || JobStatus === 'System Offline' || JobStatus === '' || JobStatus === 'ADMessage') {
            return;
        }
        if (Status === 'Execution Completed' || Status === 'Execution Terminated' || Status === 'Execution Failed' || Status === 'System Offline') {
            mes = Status;
            if (Status === 'System Offline') {
                mes += 'System went Offline.';
            }
            else if (Status === 'Execution Failed') {
                mes += 'Sorry, Execution Failed';
            }
            if (currentRunning == 'l1') {
                if ($scope.liList[currentIndex])
                    $scope.liList[currentIndex]['notification'] = mes;
            }
            else {
                if ($scope.subLiList[currentIndex])
                    $scope.subLiList[currentIndex]['notification'] = mes;
            }
        }
        else {
            var res = Status.split("=");
            mes = res[1] + '<img src="https://cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/fancybox_loading.gif" style="padding-left:10px;"/>';
        }
        if (currentRunning == 'l1') {
            if ($scope.liList[currentIndex])
                $scope.liList[currentIndex]['notification'] = mes;
        }
        else {
            if ($scope.subLiList[currentIndex])
                $scope.subLiList[currentIndex]['notification'] = mes;
        }
    }

    // This is used to convert dom text to html
    $scope.renderHtml = function (htmlCode) {
        return $sce.trustAsHtml(htmlCode);
    };

}]]></client_script>
        <controller_as>c</controller_as>
        <css>#toolboxList&gt;li { cursor: pointer}&#13;
#parentDesc{margin-top: 10px;font-size: 17px;text-align: justify;}&#13;
#listDiv{margin-top: 10px;}&#13;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link/>
        <name>Nanoheal widget</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-01-09 05:18:54</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>0ace1e290fe387007c72943be1050e7d</sys_id>
        <sys_mod_count>139</sys_mod_count>
        <sys_name>Nanoheal widget</sys_name>
        <sys_package display_value="NanohealApp" source="x_179178_nanoheala">50d492d00f4303007c72943be1050e1d</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="NanohealApp">50d492d00f4303007c72943be1050e1d</sys_scope>
        <sys_update_name>sp_widget_0ace1e290fe387007c72943be1050e7d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-01-15 07:30:00</sys_updated_on>
        <template><![CDATA[<style>
    .repair {
        float: right;
        width: 10%;
        padding-top: 4px;
        height: auto;
        min-height: 35px;
        background: #48b2e4;
        border-radius: 5px;
        text-align: center;
        font-size: 15px;
        position: absolute;
        right: 23px;
        top: 23px;
    }
    
    .repair a {
        color: #ffff;
    }
    
    li>span>h4 {
        width: 90%
    }
    
    li>span>p {
        width: 90%
    }
    
    .refresh {
        width: 10%;
        padding-top: 4px;
        height: auto;
        min-height: 35px;
        background: #48b2e4;
        border-radius: 5px;
        text-align: center;
        font-size: 15px;
        margin: 10px 20px 10px auto;
    }
    
    .refresh a {
        color: #ffff;
    }
</style>
<script type="text/javascript">

</script>
<div id="errorTab1" ng-show="::!isServiceTagAvailable" style="width:70%;margin: 20px 0px;">
    <div class="input-group">
        <input type="text" ng-model="serviceTag" id="servicetagBox" class="form-control" placeholder="Please enter your Service Tag.." />
        <span class="input-group-btn">
          <button class="btn btn-default" type="button" ng-click="getMachineActionHistoryy();" style="background: #48b2e4;color: #ffff;">Go!</button>
   	     </span>
    </div>
</div>

<ul class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#home" target="_self">Trouble Shooter</a></li>
    <li><a data-toggle="tab" href="#menu1" target="_self">Action History</a></li>
</ul>

<div class="tab-content">
    <div id="home" class="tab-pane fade in active">
        <div class="row clearfix" localized="" style="width:100%;">
            <div class="col-lg-3 col-md-4 col-sm-12 col-xs-12 left equalHeight">
                <div id="toolboxLists" class="resolution-list customscroll mCustomScrollbar _mCS_8 mCS-autoHide mCS_no_scrollbar" style="position: relative; overflow: visible;">
                    <ul id="toolboxList" class="list-group">
                        <li class="list-group-item" ng-repeat="item in liList" ng-click="getFixes($index,'l1')">{{item.profile}}</li>
                    </ul>
                </div>
            </div>
            <div class="col-lg-9 col-md-8 col-sm-12 col-xs-12 right equalHeight">
                <p id="parentDesc" localized="" ng-if="subLiList.length == 0">Use these troubleshooting and resolution tools to quickly and easily resolve many common device issues. Choose
                    a category on the left and then select the fix that best matches the issue you are experiencing.</p>
                <div id="listDiv" class="" localized="" style="position: relative; overflow: visible;">
                    <ul id="clickList" class="list-group">
                        <li class="list-group-item" ng-repeat="item in subLiList">
                            <span ng-if="item.dart == 'null'">
                  <h4>{{item.shortDesc}}</h4><p>{{trimData(item.description)}}</p>
                  <div style="display: block;" class="repair" ng-click="getFixes($index,'l2')"><a href="javascript:;"><i aria-hidden="true" class="fa fa-angle-right"></i></a></div>
                  </span>
                            <span ng-if="item.dart != 'null'">
                  <h4>{{item.shortDesc}}</h4><p>{{trimData(item.description)}}</p>
                  <div style="display: block;" class="repair" ng-click="triggerFix($event,$index,'l2')"><a href="javascript:;">Run</a></div>
                  <div style="color: red;text-align: right;" ng-bind-html="renderHtml(item.notification)"></div>
                  </span>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div id="menu1" class="tab-pane fade">
        <div class="row clearfix" localized="" style="width:100%;">
            <div class="refresh" localized="" style="display: block;float: right">
                <a href="javascript:;" ng-click="getMachineActionHistoryy();">
                    <span class="glyphicon glyphicon-refresh"></span> Refresh
                </a>
            </div>
        </div>
        <ul class="list-group">
            <li class="list-group-item">
                <div class="row">
                    <div class="col-md-2 col-sm-2 col-xsm-2"><strong>SL No</strong></div>
                    <div class="col-md-2 col-sm-2 col-xsm-2"><strong>Agent Name</strong></div>
                    <div class="col-md-2 col-sm-2 col-xsm-2"><strong>Created Time</strong></div>
                    <div class="col-md-4 col-sm-4 col-xsm-4"><strong>Profile Name</strong></div>
                    <div class="col-md-2 col-sm-2 col-xsm-2"><strong>Status</strong></div>
                </div>
            </li>
            <div style="max-height: 400px;overflow-y: scroll;">
                <li class="list-group-item" ng-repeat="item in actionHistory">
                    <div class="row">
                        <div class="col-md-2 col-sm-2 col-xsm-2">{{($index+1)}}</div>
                        <div class="col-md-2 col-sm-2 col-xsm-2">{{item.AgentName}}</div>
                        <div class="col-md-2 col-sm-2 col-xsm-2">{{item.JobCreatedTime}}</div>
                        <div class="col-md-4 col-sm-4 col-xsm-4">{{item.ProfileName}}</div>
                        <div class="col-md-2 col-sm-2 col-xsm-2">{{item.JobStatus}}</div>
                    </div>
                </li>
            </div>
        </ul>
    </div>
</div>]]></template>
    </sp_widget>
</record_update>
