<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ui_macro">
    <sys_ui_macro action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>general</category>
        <description>Nanoheal Interactive Tab </description>
        <media_type/>
        <name>Nanoheal Interactive</name>
        <scoped_name>x_179178_nanoheala_Nanoheal Interactive</scoped_name>
        <sys_class_name>sys_ui_macro</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-12-27 10:03:17</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>e88f18650f5383007c72943be1050e04</sys_id>
        <sys_mod_count>46</sys_mod_count>
        <sys_name>Nanoheal Interactive</sys_name>
        <sys_package display_value="NanohealApp" source="x_179178_nanoheala">50d492d00f4303007c72943be1050e1d</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="NanohealApp">50d492d00f4303007c72943be1050e1d</sys_scope>
        <sys_update_name>sys_ui_macro_e88f18650f5383007c72943be1050e04</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-12-28 06:27:05</sys_updated_on>
        <xml><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
    <style>
        .repair {
            float: right;
            width: 10%;
            padding-top: 4px;
            height: 30px;
            background: #48b2e4;
            border-radius: 5px;
            text-align: center;
            font-size: 20px;
        }
        .repair a{
            color: #ffff;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
    <div class="resolution-page-wrap" localized="">
        <div class="row clearfix" localized="">
            <div class="col-lg-3 col-md-4 col-sm-12 col-xs-12 left equalHeight" style="height: 435px;" localized="">
                <!--                <div class="resolution-title resolution-title-page clearfix" localized="">
                                    <div class="burger-menu-dropdown" localized="">
                                        <div class="dropdown" localized="">
                                            <a class="icon" data-toggle="dropdown" aria-expanded="false" localized="">
                                                <img id="imgDrop" src="../vendors/images/windows.png" localized="" class="mCS_img_loaded"/><span id="osTypeDrop" localized="">Windows</span> <i class="material-icons icon-ic_keyboard_arrow_down_24px" localized=""></i>
                                            </a>
                                            <ul class="dropdown-menu dropdown-menu-right" localized="">
                                                <li id="windowsIcon" localized=""><a href="javascript:;" onclick="changeDrop('windowsIcon')" localized=""><img src="../vendors/images/windows.png" localized="" class="mCS_img_loaded" />Windows</a></li>
                                                <li id="androidIcon" localized=""><a href="javascript:;" onclick="changeDrop('androidIcon')" localized=""><img src="../vendors/images/android.png" localized="" class="mCS_img_loaded" />Android</a></li>
                                                <li id="macIcon" localized=""><a href="javascript:;" onclick="changeDrop('macIcon')" localized=""><img src="../vendors/images/mac-black.png" localized="" class="mCS_img_loaded" /> Mac </a></li>
                                                <li id="iosIcon" localized=""><a href="javascript:;" onclick="changeDrop('iosIcon')" localized=""><img src="../vendors/images/ios.png" localized="" class="mCS_img_loaded" /> iOS </a></li>
                                                <li id="linuxIcon" localized=""><a href="javascript:;" onclick="changeDrop('linuxIcon')" localized=""><img src="../vendors/images/linux-black.png" localized="" class="mCS_img_loaded" />Linux</a></li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>-->
                <div id="toolboxLists" class="resolution-list customscroll mCustomScrollbar _mCS_8 mCS-autoHide mCS_no_scrollbar" style="position: relative; overflow: visible;">
                    <ul id="toolboxList" class="list-group">

                    </ul>
                </div>
            </div>
            <div class="col-lg-9 col-md-8 col-sm-12 col-xs-12 right equalHeight" style="height: 435px;" localized="">
                <input type="hidden" id="divId" localized="" />
                <input type="hidden" id="titleStore" localized="" value="The Advanced Troubleshooting section contains a variety of tools that are intended for use by trained technicians. Although you may see the list of fixes, only our agents are authorized to use these tools." />
                <input type="hidden" id="backParentId" localized="" value="2" />
                <div id="troubleshooterDiv" class="resolutions-desc" localized="">
                    <h3 id="mainParentTitle" localized=""></h3>
                    <!--                                        <h3 id="backBtn" title="Back" style="float: right;cursor: pointer;display: none;" class="icon-ic_arrow_back_24px backBtn" onclick="callBackButton();"></h3>-->
                    <p id="parentDesc" localized="">Use these troubleshooting and resolution tools to quickly and easily resolve many common device issues. Choose a category on the left and then select the fix that best matches the issue you are experiencing.</p>
                    <div id="listDiv" class="resolutions-repair customscroll mCustomScrollbar _mCS_9 mCS-autoHide" localized="" style="position: relative; overflow: visible;"><div id="mCSB_9" class="mCustomScrollBox mCS-minimal-dark mCSB_vertical mCSB_outside" style="max-height: none;" tabindex="0" localized=""><div id="mCSB_9_container" class="mCSB_container" style="position:relative; top:0; left:0;" dir="ltr" localized="">
                                <ul id="clickList" class="list-group">


                                </ul>
                            </div></div><div id="mCSB_9_scrollbar_vertical" class="mCSB_scrollTools mCSB_9_scrollbar mCS-minimal-dark mCSB_scrollTools_vertical" style="display: block;" localized=""><div class="mCSB_draggerContainer" localized=""><div id="mCSB_9_dragger_vertical" class="mCSB_dragger" style="position: absolute; min-height: 50px; top: 0px; height: 163px; display: block; max-height: 297px;" localized=""><div class="mCSB_dragger_bar" style="line-height: 50px;" localized=""></div></div><div class="mCSB_draggerRail" localized=""></div></div></div></div>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            //Get Profile Data call   
            var profileRequest = new XMLHttpRequest();
            var profileResponse = null;
            
            var ws = '';
            var wsurl = 'mspnode.nanoheal.com/hfnws';
            var reportingurl = 'mspevent.nanoheal.com';
            
            profileRequest.onreadystatechange = function () {
                if (profileRequest.readyState == XMLHttpRequest.DONE) {   // XMLHttpRequest.DONE == 4
                    if (profileRequest.status == 200) {
                        console.log("----------------------profile data-----------------");
                        console.log(profileRequest.responseText);
                        profileResponse = JSON.parse(profileRequest.responseText);
                        var toolboxlistHTML = '';
                        for (var i = 0; i != profileResponse.data.length; i++) {
                            toolboxlistHTML += '<li class="list-group-item"><a href="javascript:;" title="' + profileResponse.data[i].profile + '" onclick="' + profileResponse.data[i].clickfun + '(this, ' + profileResponse.data[i].parentId + ', `' + profileResponse.data[i].profile + '`, `' + profileResponse.data[i].dart + '`, `' + profileResponse.data[i].variable + '`, `' + profileResponse.data[i].shortDesc + '`, `' + profileResponse.data[i].tiledesc + '`,' + profileResponse.data[i].page + ', `' + profileResponse.data[i].menuItem + '`);" localized="" style="background-color: white; color: rgb(89, 89, 89);">' + profileResponse.data[i].profile + '</a></li>';
                        }
                        document.getElementById('toolboxList').innerHTML = toolboxlistHTML;
                    }
                    else if (profileRequest.status == 400) {
                        console.log('There was an error 400');
                    }
                    else {
                        console.log('something else other than 200 was returned');
                    }
                }
            };
            var authorization = localStorage.getItem("authorization");
            var authToken = localStorage.getItem("authToken");
            profileRequest.open("POST", "https://msp.nanoheal.com/Dashboard/api/profile/getProfileData", false);
            profileRequest.setRequestHeader("Authorization", "Bearer " + authorization);
            profileRequest.setRequestHeader("X-API-KEY", authToken);
            profileRequest.send(JSON.stringify({"os": "Windows", "pageId": "1", "ossub": "NA"}));


            
            if (ws === '') {
                if (window.location.protocol !== "https:") {
                    wsconnect('ws://' + wsurl, reportingurl);
                    console.clear();
                    console.log('Connecting to Communication Server : ' + 'http://' + wsurl);
                } else {
                    wsconnect('wss://' + wsurl, reportingurl);
                    console.clear();
                    console.log('Connecting to Communication Server : ' + 'https://' + wsurl);
                }
            } else {
                LogToConsole('Already Connected to Node');
            }
        });

        function clickl1level(thisVal, parentId, profile, dart, variable, varValue, description, page, menuitem) {
            var profileRequest = new XMLHttpRequest();
            var profileResponse = null;
            profileRequest.onreadystatechange = function () {
                if (profileRequest.readyState == XMLHttpRequest.DONE) {   // XMLHttpRequest.DONE == 4
                    if (profileRequest.status == 200) {
                        console.log("----------------------profile data-----------------");
                        console.log(profileRequest.responseText);
                        profileResponse = JSON.parse(profileRequest.responseText);
                        var toolboxlistHTML = '';
                        for (var i = 0; i != profileResponse.data.length; i++) {
                            toolboxlistHTML += '<li class="list-group-item"><div class="clearfix" localized="">' +
                                    '<div class="reset" localized=""><h4 localized="">' + profileResponse.data[i].shortDesc +
                                    '</h4><p localized="">' + decodeURIComponent((profileResponse.data[i].description + '').replace(/\+/g, '%20')) + '</p></div>' +
                                    '<div id="maximize11" class="repair" localized="" style="display: block;">' +
                                    '<a href="javascript:;" onclick="' + profileResponse.data[i].clickfun + '(this, ' + profileResponse.data[i].parentId + ', `' + profileResponse.data[i].profile + '`, `' + profileResponse.data[i].dart + '`, `' + profileResponse.data[i].variable + '`, `' + profileResponse.data[i].shortDesc + '`, `' + profileResponse.data[i].shortDesc + '`,' + profileResponse.data[i].page + ', `' + profileResponse.data[i].menuItem +
                                    '`);">';
                            if(profileResponse.data[i].clickfun == "clickl3level"){
                                toolboxlistHTML +='<i class="" localized=""></i>Run';
                            }
                            else{
                                toolboxlistHTML +='<i class="fa fa-angle-right" aria-hidden="true"></i>';
                            }
                            toolboxlistHTML += '</a></div></div></li>';
                        }
                        document.getElementById('parentDesc').innerHTML = "";
                        document.getElementById('clickList').innerHTML = toolboxlistHTML;
                    }
                    else if (profileRequest.status == 400) {
                        console.log('There was an error 400');
                    }
                    else {
                        console.log('something else other than 200 was returned');
                    }
                }
            };
            var authorization = localStorage.getItem("authorization");
            var authToken = localStorage.getItem("authToken");
            profileRequest.open("POST", "https://msp.nanoheal.com/Dashboard/api/profile/getProfileData", false);
            profileRequest.setRequestHeader("Authorization", "Bearer " + authorization);
            profileRequest.setRequestHeader("X-API-KEY", authToken);
            profileRequest.send(JSON.stringify({"os": "Windows", "pageId": parentId, "backId": page, "menuitem": profile, "ossub": "NA"}));
        }

        function clickl3level(thisVal, parentId, profile, dart, variable, varValue, description, page, menuitem) {
            var profileRequest = new XMLHttpRequest();
            var profileResponse = null;
            profileRequest.onreadystatechange = function () {
                if (profileRequest.readyState == XMLHttpRequest.DONE) {   // XMLHttpRequest.DONE == 4
                    if (profileRequest.status == 200) {
                        console.log("----------------------profile data-----------------");
                        console.log(profileRequest.responseText);
                        EmitJobsForServiceTags();
                    }
                    else if (profileRequest.status == 400) {
                        console.log('There was an error 400');
                    }
                    else {
                        console.log('something else other than 200 was returned');
                    }
                }
            };
            var authorization = localStorage.getItem("authorization");
            var authToken = localStorage.getItem("authToken");
            profileRequest.open("POST", "https://msp.nanoheal.com/Dashboard/api/profile/actionInteractive", false);
            profileRequest.setRequestHeader("Authorization", "Bearer " + authorization);
            profileRequest.setRequestHeader("X-API-KEY", authToken);
            profileRequest.send(JSON.stringify({"machine": "HFND100136", "shortDesc": description, "profileName": profile, "dartNumber": dart, "variable": variable}));
        
     }

        function wsconnect(wsurl, reportingurl) {
            ws = new WebSocket(wsurl);
            ws.onopen = function () {
                console.log('Connecting to Communication Server Success');
                var ConnectData = {};
                ConnectData['Type'] = 'Dashboard';
                ConnectData['AgentId'] = 'admin@nanoheal.com';
                ConnectData['AgentName'] = 'admin@123';
                ConnectData['ReportingURL'] = reportingurl;
                ws.send(JSON.stringify(ConnectData));
            };
            ws.onmessage = function (msg) {
               
            };
            ws.onclose = function () {
                setTimeout(function () {
                    wsconnect(wsurl);
                }, 2000);
            };
        }
        
        function EmitJobsForServiceTags(){
            var serviceTag = "HFND100136";
            var JobData = {};
                    JobData['Type'] = 'ExecuteJob';
                    JobData['ServiceTag'] = serviceTag;
                    ws.send(JSON.stringify(JobData));
        }
    </script>
</j:jelly>]]></xml>
    </sys_ui_macro>
</record_update>
