<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ui_macro">
    <sys_ui_macro action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>general</category>
        <description>Nanoheal Interactive Tab </description>
        <media_type/>
        <name>Nanoheal Interactive</name>
        <scoped_name>x_179178_nanoheala_Nanoheal Interactive</scoped_name>
        <sys_class_name>sys_ui_macro</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-12-27 10:03:17</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>e88f18650f5383007c72943be1050e04</sys_id>
        <sys_mod_count>96</sys_mod_count>
        <sys_name>Nanoheal Interactive</sys_name>
        <sys_package display_value="NanohealApp" source="x_179178_nanoheala">50d492d00f4303007c72943be1050e1d</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="NanohealApp">50d492d00f4303007c72943be1050e1d</sys_scope>
        <sys_update_name>sys_ui_macro_e88f18650f5383007c72943be1050e04</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-01-15 05:54:24</sys_updated_on>
        <xml><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
    <style>
        .repair {
            float: right;
            width: 10%;
            padding-top: 4px;
            height: auto;
            min-height: 35px;
            background: #48b2e4;
            border-radius: 5px;
            text-align: center;
            font-size: 15px;
            position: absolute;
            right: 23px;
            top: 23px;
        }
        .repair a{
            color: #ffff;
        }
        .servicetagBtn{
            position: absolute;
            top: 0px;
            float: right;
            left: 100%;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
    <div id="errormessage2" style="display: none;margin-left: 40px;">Please Configure nanoheal Application</div>
    <div id="interactiveTab" style="display: none;">
        <div class="container">
        <div class="row topheader">
			<div class="col-md-2"><strong>Machine Name:</strong></div>
			<div class="col-md-2" id="machinename3"></div>
			<div class="col-md-2"><strong>Machine Status:</strong></div>
			<div class="col-md-2" id="machinestatus3"></div>
			<div>
				<div class="export" localized="" style="display: block;float: right">
					<a href="javascript:;" onclick="getInterativeData();">
						<span class="glyphicon glyphicon-refresh"></span> Refresh
					</a>
				</div>
			</div>
		</div>
        <div class="resolution-page-wrap" localized="">
            <div class="row clearfix" localized="" style="width:100%;">
                <div class="col-lg-3 col-md-4 col-sm-12 col-xs-12 left equalHeight">
                    <div id="toolboxLists" class="resolution-list customscroll mCustomScrollbar _mCS_8 mCS-autoHide mCS_no_scrollbar" style="position: relative; overflow: visible;">
                        <ul id="toolboxList" class="list-group">

                        </ul>
                    </div>
                </div>
                <div class="col-lg-9 col-md-8 col-sm-12 col-xs-12 right equalHeight">
                    <input type="hidden" id="divId" localized="" />
                    <input type="hidden" id="titleStore" localized="" value="The Advanced Troubleshooting section contains a variety of tools that are intended for use by trained technicians. Although you may see the list of fixes, only our agents are authorized to use these tools." />
                    <input type="hidden" id="backParentId" localized="" value="2" />
                    <div id="troubleshooterDiv" class="resolutions-desc" localized="">
                        <h3 id="mainParentTitle" localized=""></h3>
                        <!--                                        <h3 id="backBtn" title="Back" style="float: right;cursor: pointer;display: none;" class="icon-ic_arrow_back_24px backBtn" onclick="callBackButton();"></h3>-->
                        <p id="parentDesc" localized="">Use these troubleshooting and resolution tools to quickly and easily resolve many common device issues. Choose a category on the left and then select the fix that best matches the issue you are experiencing.</p>
                        <div id="listDiv" class="resolutions-repair customscroll mCustomScrollbar _mCS_9 mCS-autoHide" localized="" style="position: relative; overflow: visible;"><div id="mCSB_9" class="mCustomScrollBox mCS-minimal-dark mCSB_vertical mCSB_outside" style="max-height: none;" tabindex="0" localized=""><div id="mCSB_9_container" class="mCSB_container" style="position:relative;top:0;left:0;max-height: 400px;" dir="ltr">
                                    <ul id="clickList" class="list-group">


                                    </ul>
                                </div></div><div id="mCSB_9_scrollbar_vertical" class="mCSB_scrollTools mCSB_9_scrollbar mCS-minimal-dark mCSB_scrollTools_vertical" style="display: block;" localized=""><div class="mCSB_draggerContainer" localized=""><div id="mCSB_9_dragger_vertical" class="mCSB_dragger" style="position: absolute; min-height: 50px; top: 0px; height: 163px; display: block; max-height: 297px;" localized=""><div class="mCSB_dragger_bar" style="line-height: 50px;" localized=""></div></div><div class="mCSB_draggerRail" localized=""></div></div></div></div>
                    </div>
                </div>
            </div>
            </div>
        </div>
    </div>
    <div id="errorTab1" style="display: none;">
        <h5 style="margin-left: 15px;margin-bottom: 15px;">No Service Tag found. Please enter Service Tag..</h5>
        <div>
            <div class="col-sm-4 col-md-4">
                <input type="text" class="form-control" id="servicetag1" placeholder="ServiceTag"/><input type="button" class="btn btn-default servicetagBtn" onclick="javascript:getInterativeData();" value="Submit" />
            </div>
        </div>
    </div>    
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
			try{
			    if (jwtToken == "") throw "API Token Not set"; 
			    if (baseUrl == "") throw "API Url Not set"; 
			    getInterativeData();
			}
			catch(e) {
				console.log(e);
				document.getElementById("errormessage2").style.display = "block";
			}
        });

        function getInterativeData() {
             var authorization, authToken = "";
            if (existingsession = checkSessionValidity()) {
                authorization = existingsession.Authorization;
                authToken =  existingsession.AuthToken;
            }
            else {
                var newsession = createNewSession();
                authorization = newsession.Authorization;
                authToken =  newsession.AuthToken;
            }
            if (document.getElementById('incident.u_service_tag') != 'undefined') {
                serviceTag = document.getElementById('incident.u_service_tag').value;
            }
            if (serviceTag == '') {
                serviceTag = document.getElementById('servicetag1').value;
            }
            if (serviceTag != "") {
                document.getElementById("errorTab1").style.display = "none";
                document.getElementById("interactiveTab").style.display = "block";
                //Get Profile Data call   
                var profileRequest = new XMLHttpRequest();
                var profileResponse = null;
                profileRequest.onreadystatechange = function () {
                    if (profileRequest.readyState == XMLHttpRequest.DONE) {   // XMLHttpRequest.DONE == 4
                        if (profileRequest.status == 200) {
                            profileResponse = JSON.parse(profileRequest.responseText);
                            var toolboxlistHTML = '';
                            for (var i = 0; i != profileResponse.data.length; i++) {
                                toolboxlistHTML += '<li class="list-group-item"><a href="javascript:;" title="' + profileResponse.data[i].profile + '" onclick="' + profileResponse.data[i].clickfun + '(this, ' + profileResponse.data[i].parentId + ', `' + profileResponse.data[i].profile + '`, `' + profileResponse.data[i].dart + '`, `' + profileResponse.data[i].variable + '`, `' + profileResponse.data[i].shortDesc + '`, `' + profileResponse.data[i].tiledesc + '`,' + profileResponse.data[i].page + ', `' + profileResponse.data[i].menuItem + '`);" localized="" style="background-color: white; color: rgb(89, 89, 89);">' + profileResponse.data[i].profile + '</a></li>';
                            }
                            document.getElementById('toolboxList').innerHTML = toolboxlistHTML;
                        }
                        else if (profileRequest.status == 400) {
                            console.log('There was an error 400');
                        }
                        else {
                            console.log('something else other than 200 was returned');
                        }
                    }
                };
                try {
                    if(authorization == "") throw "Authorization String Not set In getProfileData Request!";
                    if(authToken == "") throw "Authtoken String Not set In getProfileData Request!";
                    profileRequest.open("POST", baseUrl+"/api/profile/getProfileData");
                    profileRequest.setRequestHeader("Authorization", "Bearer " + authorization);
                    profileRequest.setRequestHeader("X-API-KEY", authToken);
                    profileRequest.send(JSON.stringify({"os": "Windows", "pageId": "1", "ossub": "NA"}));
                } catch (error) {
                    console.log(error);
                }
            }
            else {
                document.getElementById("errorTab1").style.display = "block";
                document.getElementById("interactiveTab").style.display = "none";
            }
        }

        function clickl1level(thisVal, parentId, profile, dart, variable, varValue, description, page, menuitem) {
            var profileRequest = new XMLHttpRequest();
            var profileResponse = null;
            var authorization, authToken = "";
            if (existingsession = checkSessionValidity()) {
                authorization = existingsession.Authorization;
                authToken =  existingsession.AuthToken;
            }
            else {
                var newsession = createNewSession();
                authorization = newsession.Authorization;
                authToken =  newsession.AuthToken;
            }
            profileRequest.onreadystatechange = function () {
                if (profileRequest.readyState == XMLHttpRequest.DONE) {   // XMLHttpRequest.DONE == 4
                    if (profileRequest.status == 200) {
                        profileResponse = JSON.parse(profileRequest.responseText);
                        var toolboxlistHTML = '';
                        for (var i = 0; i != profileResponse.data.length; i++) {
                            toolboxlistHTML += '<li class="list-group-item"><div class="clearfix" localized="">' +
                                    '<div class="reset" localized="" style="width: 87%;"><h4 localized="">' + profileResponse.data[i].shortDesc +
                                    '</h4><p localized="">' + decodeURIComponent((profileResponse.data[i].description + '').replace(/\+/g, '%20')) + '</p></div>' +
                                    '<div id="maximize11" class="repair" localized="" style="display: block;">' +
                                    '<a href="javascript:;" onclick="' + profileResponse.data[i].clickfun + '(this, ' + profileResponse.data[i].parentId + ', `' + profileResponse.data[i].profile + '`, `' + profileResponse.data[i].dart + '`, `' + profileResponse.data[i].variable + '`, `' + profileResponse.data[i].shortDesc + '`, `' + profileResponse.data[i].shortDesc + '`,' + profileResponse.data[i].page + ', `' + profileResponse.data[i].menuItem +
                                    '`);">';
                            var extraHtml = "";
                            if (profileResponse.data[i].clickfun == "clickl3level") {
                                var divid="interactive_"+profileResponse.data[i].parentId+"_"+profileResponse.data[i].profile;
                                divid = divid.replace(/\s/g,'');
                                toolboxlistHTML += 'Run';
                                extraHtml = '<div id="'+divid+'" style="color: red;text-align: right;"></div>';
                            }
                            else {
                                toolboxlistHTML += '<i class="fa fa-angle-right" aria-hidden="true"></i>';
                            }
                            toolboxlistHTML += '</a></div></div>'+extraHtml+'</li>';
                        }
                        document.getElementById('parentDesc').innerHTML = "";
                        document.getElementById('clickList').innerHTML = toolboxlistHTML;
                    }
                    else if (profileRequest.status == 400) {
                        console.log('There was an error 400');
                    }
                    else {
                        console.log('something else other than 200 was returned');
                    }
                }
            };
            try {
                if(authorization == "") throw "Authorization String Not set In getProfileData Request!";
                if(authToken == "") throw "Authtoken String Not set In getProfileData Request!";
                profileRequest.open("POST", baseUrl+"/api/profile/getProfileData");
                profileRequest.setRequestHeader("Authorization", "Bearer " + authorization);
                profileRequest.setRequestHeader("X-API-KEY", authToken);
                profileRequest.send(JSON.stringify({"os": "Windows", "pageId": parentId, "backId": page, "menuitem": profile, "ossub": "NA"}));
            } catch (error) {
                console.log(error);
            }
            
        }

        function clickl3level(thisVal, parentId, profile, dart, variable, varValue, description, page, menuitem) {
            var authorization, authToken = "";
            if (existingsession = checkSessionValidity()) {
                authorization = existingsession.Authorization;
                authToken =  existingsession.AuthToken;
            }
            else {
                var newsession = createNewSession();
                authorization = newsession.Authorization;
                authToken =  newsession.AuthToken;
            }
            var profileRequest = new XMLHttpRequest();
            notificationdiv = "interactive_"+parentId+"_"+profile;
            notificationdiv = notificationdiv.replace(/\s/g,'');
            profileRequest.onreadystatechange = function () {
                if (profileRequest.readyState == XMLHttpRequest.DONE) {   // XMLHttpRequest.DONE == 4
                    if (profileRequest.status == 200) {
                        var JobData = {};
                        JobData['Type'] = 'ExecuteJob';
                        JobData['ServiceTag'] = serviceTag;
                        console.log(JobData);
                        ws.send(JSON.stringify(JobData));
                        thisVal.innerHTML = "Solution Pushed";
                        thisVal.parentElement.style.backgroundColor = "green";
                    }
                    else if (profileRequest.status == 400) {
                        console.log('There was an error 400');
                    }
                    else {
                        console.log('something else other than 200 was returned');
                    }
                }
            };
            try {
                if(authorization == "") throw "Authorization String Not set In Export Machine History Request!";
                if(authToken == "") throw "Authtoken String Not set In Export Machine History Request!";
                if(serviceTag == "") throw "Servicetag Not set In Interactive Fix Request!";
                profileRequest.open("POST", baseUrl+"/api/profile/actionInteractive");
                profileRequest.setRequestHeader("Authorization", "Bearer " + authorization);
                profileRequest.setRequestHeader("X-API-KEY", authToken);
                profileRequest.send(JSON.stringify({"machine": serviceTag, "shortDesc": description, "profileName": profile, "dartNumber": dart, "variable": variable, "snusername": serviceNowUsername}));
            } catch (error) {
                console.log(error);
            }
            

        }
    </script>
</j:jelly>]]></xml>
    </sys_ui_macro>
</record_update>
